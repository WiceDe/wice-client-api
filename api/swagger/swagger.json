  {
    "openapi": "3.0.0",
    "info": {
      "description": "This is a client API for Wice CRM \n ## Before you begin \nYou will need an active Wice CRM account, and your tenant needs to have the \"Wice CRM Client API\" module installed and enabled.\n ## Authentication \n Log with your credentials using the webvis endpoint. This will return a cookie that you can pass as either a query parameter or form value on following requests to authenticate yourself. \n ## Using the API \n All requests are made to a single URL, they are only listed individually here for clearer documentation. The function of the endpoint is determined through the *method* parameter, which can be passed as a query parameter for GET requests, and as part of form data for POST requests. \n\n When sending data through POST requests, all data must be formatted as stringified JSON, and sent as the *data* property of the form data. \n ## Troubleshooting \n Login cookies have a limited lifetime depending on Wice Server configuration, usually not longer than a few hours. If requests are failing, first try using a fresh login cookie.",
      "version": "1.2.2",
      "title": "Wice CRM Client API",
      "termsOfService": "https://wice.de",
      "contact": {
        "email": "support@wice.de"
      },
      "license": {
        "name": "Apache-2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "tags": [{
        "name": "user",
        "description": "User management",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "persons",
        "description": "Manipulate stored persons",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "organizations",
        "description": "Manipulate stored organizations",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "articles",
        "description": "Manipulate stored articles",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "events",
        "description": "Manipulate stored calendar events",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "opportunities",
        "description": "Manipulate stored opportunities. Currently under development and subject to change.",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "tickets",
        "description": "Manipulate stored tickets and notes. Currently under development and subject to change.",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "categories",
        "description": "Getting categories for each category type. Currently under development and subject to change.",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      },
      {
        "name": "workflows",
        "description": "Data about workflows and operations on workflows.",
        "externalDocs": {
          "description": "Find out more",
          "url": "https://wice.de"
        }
      }
    ],
    "paths": {
      "/pserv/base/webvis": {
        "post": {
          "tags": [
            "user"
          ],
          "x-swagger-router-controller": "user",
          "summary": "Login user",
          "description": "Login in Wice CRM.",
          "responses": {
            "200": {
              "description": "Supplies the cookie after successful login",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/loginUserResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid input"
            }
          },
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loginUser"
                }
              }
            },
            "description": "Mandant name and username which will be passed on to the server",
            "required": true
          }
        }
      },
      "/plugin/wp_wice_client_api_backend/json#getPersons": {
        "get": {
          "tags": [
            "persons"
          ],
          "parameters": [
            {
              "in": "query",
              "name": "cookie",
              "description": "Your login cookie.",
              "schema": {"type": "string"},
              "required": true
            },
            {
              "in": "query",
              "name": "method",
              "description": "Determines the type of resource to be fetched.",
              "schema": {
                "type": "string",
                "enum": ["get_all_persons"]
              },
              "required": true
            },
            {
              "in": "query",
              "name": "full_list",
              "description": "If set to 1, will return all entries in one object. Otherwise will return paginated results",
              "schema": {
                "type": "number",
                "enum": [1]
              },
              "required": false
            },
          ],
          "x-swagger-router-controller": "persons",
          "summary": "Get a list of persons",
          "description": "Returns all available persons",
          "responses": {
            "200": {
              "description": "An array of all requested persons",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/getPersonResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid input"
            }
          }
        },
      },
      "/plugin/wp_wice_client_api_backend/json#createPerson": {
        "post": {
          "tags": [
            "persons"
          ],
          "x-swagger-router-controller": "persons",
          "summary": "Create a new person",
          "description": "Creates a new person within Wice CRM",
          "responses": {
            "200": {
              "description": "Supplies the rowid of the created person",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/createPersonResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid input"
            }
          },
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/createPersonRequestForm",
                }
              }
            },
            "description": "The data of the resource to be created, please refer to the appropriate schema depending on resource type.",
            "required": true
          }
        }
      },
      "/plugin/wp_wice_client_api_backend/json#updatePerson": {
        "post": {
          "tags": [
            "persons"
          ],
          "x-swagger-router-controller": "persons",
          "summary": "Update an existing person",
          "description": "Updates an existing person within Wice CRM, identified by its rowid",
          "responses": {
            "200": {
              "description": "Supplies the rowid of the created person",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      "$ref": "#/components/schemas/updatePersonResponse",
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Invalid input"
            }
          },
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/updatePersonRequestForm"
                }
              }
            },
            "description": "The data of the resource to be created, please refer to the appropriate schema depending on resource type.",
            "required": true
          }
        }
      },
      "/plugin/wp_wice_client_api_backend/json#deletePerson": {
        "post": {
          "tags": [
            "persons"
          ],
          "x-swagger-router-controller": "persons",
          "summary": "Deactivate an existing organization",
          "description": "Deactivates an existing person within Wice CRM, identified by its rowid",
          "responses": {
            "200": {
              "description": "Confirms deletion with Deletion successful message",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      "$ref": "#/components/schemas/deletePersonResponse"
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Invalid input"
            }
          },
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/deletePersonRequestForm"
                }
              }
            },
            "description": "The data of the resource to be created, please refer to the appropriate schema depending on resource type.",
            "required": true
          }
        }
      },
      "/plugin/wp_wice_client_api_backend/json#getOrganizations": {
       "get": {
         "tags": [
           "organizations"
         ],
         "parameters": [
           {
             "in": "query",
             "name": "cookie",
             "description": "Your login cookie.",
             "schema": {"type": "string"},
             "required": true
           },
           {
             "in": "query",
             "name": "method",
             "description": "Determines the operation.",
             "schema": {
               "type": "string",
               "enum": ["get_all_companies"]
             },
             "required": true
           },
           {
             "in": "query",
             "name": "full_list",
             "description": "If set to 1, will return all entries in one object. Otherwise will return paginated results",
             "schema": {
               "type": "number",
               "enum": [1]
             },
             "required": false
           },
         ],
         "x-swagger-router-controller": "organization",
         "summary": "Get a list of all companies",
         "description": "Returns all available companies",
         "responses": {
           "200": {
             "description": "An array of all requested companies",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/getOrganizationResponse"
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#createOrganization": {
       "post": {
         "tags": [
           "organizations"
         ],
         "x-swagger-router-controller": "organization",
         "summary": "Create a new organization",
         "description": "Creates a new organization within Wice CRM",
         "responses": {
           "200": {
             "description": "Supplies the rowid of the created organization",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/createOrganizationResponse"
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/createOrganizationRequestForm",
               }
             }
           },
           "description": "The data of the organization should be in JSON format.",
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#updateOrganization": {
       "post": {
         "tags": [
           "organizations"
         ],
         "x-swagger-router-controller": "organization",
         "summary": "Update an existing organization",
         "description": "Updates an existing organization within Wice CRM, identified by its rowid",
         "responses": {
           "200": {
             "description": "Supplies the rowid of the created organization",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/updateOrganizationResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/updateOrganizationRequestForm"
               }
             }
           },
           "description": "The data of the organization should be in JSON format.",
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#deleteOrganization": {
       "post": {
         "tags": [
           "organizations"
         ],
         "x-swagger-router-controller": "organization",
         "summary": "Deactivate an existing organization",
         "description": "Deactivates an existing organization within Wice CRM, identified by its rowid",
         "responses": {
           "200": {
             "description": "Supplies the rowid of the created organization",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/deleteOrganizationResponse"
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/deleteOrganizationRequestForm"
               }
             }
           },
           "description": "Requires only the rowid of the organization.",
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#getArticles": {
      "get": {
        "tags": [
          "articles"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cookie",
            "description": "Your login cookie.",
            "schema": {"type": "string"},
            "required": true
          },
          {
            "in": "query",
            "name": "method",
            "description": "Determines the operation.",
            "schema": {
              "type": "string",
              "enum": ["get_all_articles"]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "full_list",
            "description": "If set to 1, will return all entries in one object. Otherwise will return paginated results",
            "schema": {
              "type": "number",
              "enum": [1]
            },
            "required": false
          },
        ],
        "x-swagger-router-controller": "articles",
        "summary": "Get a list of all articles",
        "description": "Returns all available articles",
        "responses": {
          "200": {
            "description": "An array of all requested articles",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getArticleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/plugin/wp_wice_client_api_backend/json#createArticle": {
      "post": {
        "tags": [
          "articles"
        ],
        "x-swagger-router-controller": "articles",
        "summary": "Create a new article",
        "description": "Creates a new article within Wice CRM",
        "responses": {
          "200": {
            "description": "Supplies the rowid of the created article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/createArticleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid input"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/createArticleRequestForm",
              }
            }
          },
          "description": "The data of the article should be in JSON format.",
          "required": true
        }
      }
    },
    "/plugin/wp_wice_client_api_backend/json#updateArticle": {
      "post": {
        "tags": [
          "articles"
        ],
        "x-swagger-router-controller": "articles",
        "summary": "Update an article",
        "description": "Update an existing article",
        "responses": {
          "200": {
            "description": "Supplies the rowid of the updated article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/updateArticleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid input"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/updateArticleRequestForm"
              }
            }
          },
          "description": "The data of the article should be in JSON format and include the article's rowid.",
          "required": true
        }
      }
    },
    "/plugin/wp_wice_client_api_backend/json#deleteArticle": {
      "post": {
        "tags": [
          "articles"
        ],
        "x-swagger-router-controller": "articles",
        "summary": "Delete an article",
        "description": "Deletes an existing article",
        "responses": {
          "200": {
            "description": "Confirms a successful deletion",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/deleteArticleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid input"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/deleteArticleRequestForm"
              }
            }
          },
          "description": "Requires only the article's rowid",
          "required": true
        }
      }
    },
      "/plugin/wp_wice_client_api_backend/json#getEvents": {
       "get": {
         "tags": [
           "events"
         ],
         "parameters": [
           {
             "in": "query",
             "name": "cookie",
             "description": "Your login cookie.",
             "schema": {"type": "string"},
             "required": true
           },
           {
             "in": "query",
             "name": "method",
             "description": "Determines the operation.",
             "schema": {
               "type": "string",
               "enum": ["get_events"]
             },
             "required": true
           }
         ],
         "x-swagger-router-controller": "events",
         "summary": "Get a list of all events",
         "description": "Returns all future calendar events",
         "responses": {
           "200": {
             "description": "An array of event objects",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/getEventsResponse"
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#createEvent": {
       "post": {
         "tags": [
           "events"
         ],
         "x-swagger-router-controller": "events",
         "summary": "Create a new event",
         "description": "Creates a new calendar event within Wice CRM",
         "responses": {
           "200": {
             "description": "Supplies the rowid of the created event",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/createEventResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/createEventRequestForm",
               }
             }
           },
           "description": "The data of the event should be in JSON format.",
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#updateEvent": {
       "post": {
         "tags": [
           "events"
         ],
         "x-swagger-router-controller": "events",
         "summary": "Update an event",
         "description": "Update an existing calendar event",
         "responses": {
           "200": {
             "description": "Supplies the rowid of the updated event",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/updateEventResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/updateEventRequestForm",
               }
             }
           },
           "description": "The data of the event should be in JSON format and include the event's rowid.",
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#deleteEvent": {
       "post": {
         "tags": [
           "events"
         ],
         "x-swagger-router-controller": "event",
         "summary": "Delete event or yourself from an event",
         "description": "Deletes yourself as participant from existing event. Deletes event if it has no more participants.",
         "responses": {
           "200": {
             "description": "Confirms a successful deletion",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/deleteEventResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/deleteEventRequestForm",
               }
             }
           },
           "description": "Requires only the event's rowid",
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#getOpportunities": {
       "get": {
         "tags": [
           "opportunities"
         ],
         "parameters": [
           {
             "in": "query",
             "name": "cookie",
             "description": "Your login cookie.",
             "schema": {"type": "string"},
             "required": true
           },
           {
             "in": "query",
             "name": "method",
             "description": "Determines the type of resource to be fetched.",
             "schema": {
               "type": "string",
               "enum": ["get_opportunities"]
             },
             "required": true
           },
           {
             "in": "query",
             "name": "chance_date_start_month",
             "description": "Calendar month (1-12) of earliest opportunities to be fetched. Defaults to current month",
             "schema": {
               "type": "integer",
               "minimum": 1,
               "maximum": 12
             },
             "required": false
           },
           {
             "in": "query",
             "name": "chance_date_end_month",
             "description": "Calendar month (1-12) of latest opportunities to be fetched. Defaults to current month",
             "schema": {
               "type": "integer",
               "minimum": 1,
               "maximum": 12
             },
             "required": false
           },
           {
             "in": "query",
             "name": "chance_date_start_year",
             "description": "Year (format YYYY) of earliest opportunities to be fetched. Defaults to current year",
             "schema": {
               "type": "number"
             },
             "required": false
           },
           {
             "in": "query",
             "name": "chance_date_end_year",
             "description": "Year (format YYYY) of latest opportunities to be fetched. Defaults to current year",
             "schema": {
               "type": "number"
             },
             "required": false
           },
         ],
         "x-swagger-router-controller": "opportunities",
         "summary": "Get a list of opportunities",
         "description": "Returns all available opportunities within the specified time range. Defaults to current month",
         "responses": {
           "200": {
             "description": "An array of all requested opportunities",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/getOpportunitiesResponse"
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#createTicket": {
       "post": {
         "tags": [
           "tickets"
         ],
         "x-swagger-router-controller": "ticket",
         "summary": "Create a new ticket",
         "description": "Creates a new ticket",
         "responses": {
           "200": {
             "description": "Returns the ticket's rowid",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/createTicketResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/createTicketRequestForm",
               }
             }
           },
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#createNote": {
       "post": {
         "tags": [
           "tickets"
         ],
         "x-swagger-router-controller": "ticket",
         "summary": "Creates a new note for a ticket",
         "description": "Each note must be attached to an already existing ticket by rowid",
         "responses": {
           "200": {
             "description": "Returns the ticket's rowid",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/createNoteResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/createNoteRequestForm",
               }
             }
           },
           "required": true
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#getTicketTypes": {
      "get": {
        "tags": [
          "tickets"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cookie",
            "description": "Your login cookie.",
            "schema": {"type": "string"},
            "required": true
          },
          {
            "in": "query",
            "name": "method",
            "description": "Determines the operation.",
            "schema": {
              "type": "string",
              "enum": ["get_ticket_types"]
            },
            "required": true
          }
        ],
        "x-swagger-router-controller": "tickets",
        "summary": "Get a list of all ticket types",
        "description": "Returns all available ticket types",
        "responses": {
          "200": {
            "description": "An array of all ticket types",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTicketTypesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid input"
          }
        }
      }
      },
      "/plugin/wp_wice_client_api_backend/json#getWorkflows": {
       "get": {
         "tags": [
           "workflows"
         ],
         "parameters": [
           {
             "in": "query",
             "name": "cookie",
             "description": "Your login cookie.",
             "schema": {"type": "string"},
             "required": true
           },
           {
             "in": "query",
             "name": "method",
             "description": "Determines the operation.",
             "schema": {
               "type": "string",
               "enum": ["get_workflows"]
             },
             "required": true
           }
         ],
         "x-swagger-router-controller": "workflows",
         "summary": "Get a list of all workflows",
         "description": "Returns a list of all workflows",
         "responses": {
           "200": {
             "description": "An array containing all workflows",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/getWorkflowsResponse"
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         }
       }
     },
     "/plugin/wp_wice_client_api_backend/json#getCategories": {
      "get": {
        "tags": [
          "categories"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cookie",
            "description": "Your login cookie.",
            "schema": {"type": "string"},
            "required": true
          },
          {
            "in": "query",
            "name": "method",
            "description": "Determines the operation.",
            "schema": {
              "type": "string",
              "enum": ["get_categories"]
            },
            "required": true
          }
        ],
        "x-swagger-router-controller": "categories",
        "summary": "Get a list of all categories",
        "description": "Returns all available categories aggregated by category type",
        "responses": {
          "200": {
            "description": "An hash of category types with each entry containing hash with the key options containing an arrays of all categories for the type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getCategoriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid input"
          }
        }
      }
    },
     "/plugin/wp_wice_client_api_backend/json#startWorkflow": {
       "post": {
         "tags": [
           "workflows"
         ],
         "x-swagger-router-controller": "workflows",
         "summary": "Starts a workflow",
         "description": "Must supply the ticket's rowid and workflow stop, and optionally branching workflow step",
         "responses": {
           "200": {
             "description": "Returns the ticket's rowid",
             "content": {
               "application/json": {
                 "schema": {
                   "$ref": "#/components/schemas/startWorkflowResponse",
                 }
               }
             }
           },
           "401": {
             "description": "Invalid input"
           }
         },
         "requestBody": {
           "content": {
             "multipart/form-data": {
               "schema": {
                 "$ref": "#/components/schemas/startWorkflowRequestForm",
               }
             }
           },
           "required": true
         }
       }
     },
    },
    "externalDocs": {
      "description": "Find out more about Wice CRM",
      "url": "https://wice.de"
    },
    "servers": [{
        "url": "https://{server}.wice-net.de",
        "variables": {
          "server": {
            "default": "oihwice"
          }
        }
      },
      {
        "url": "http://localhost:5000/"
      }
    ],
    "components": {
      "schemas": {
        "loginUser": {
          "type": "object",
          "required": [
            "mandant_name",
            "username",
            "password"
          ],
          "properties": {
            "mandant_name": {
              "type": "string",
              "example": "companygmbh"
            },
            "username": {
              "type": "string",
              "example": "maxmustermann"
            },
            "password": {
              "type": "string",
              "example": "yourpassword"
            }
          }
        },
        "loginUserResponse": {
          "type": "object",
          "properties": {
            "cookie": {
              "type": "string",
              "example": "5pd8m4jxaab8sp3mi4yluhkjrhmhqpug"
            }
          }

        },
        "getPersonResponse": {
          "type": "object",
          "properties": {
            "loop_addresses": {
              "type": "array",
              "items": {
            "type": "object",
                "properties": {
                  "rowid": {
                    "type": "string",
                    "example": "821528"
                  },
                  "mandant": {
                    "type": "string",
                    "example": "sandbox"
                  },
                  "for_rowid": {
                    "type": "string",
                    "example": "946512"
                  },
                  "same_contactperson": {
                    "type": "string",
                  },
                  "name": {
                    "type": "string",
                    "example": "Doe"
                  },
                  "firstName": {
                    "type": "string",
                    "example": "Jane"
                  },
                  "email": {
                    "type": "string",
                    "example": "jane@doe.com"
                  },
                  "title": {
                    "type": "string",
                    "example": "Dr."
                  },
                  "salutation": {
                    "type": "string",
                    "example": "Greetings"
                  },
                  "birthday": {
                    "type": "string",
                    "example": "01.01.2000"
                  },
                  "private_street": {
                    "type": "string",
                    "example": "Europaplatz"
                  },
                  "private_street_number": {
                    "type": "string",
                    "example": "12"
                  },
                  "private_zip_code": {
                    "type": "string",
                    "example": "10115"
                  },
                  "private_town": {
                    "type": "string",
                    "example": "Berlin"
                  },
                  "private_state": {
                    "type": "string",
                    "example": "Berlin"
                  },
                  "private_country": {
                    "type": "string",
                    "example": "Germany"
                  },
                  "phone": {
                    "type": "string",
                    "example": "0124/5478"
                  },
                  "fax": {
                    "type": "string",
                    "example": "0124/5478"
                  },
                  "private_phone": {
                    "type": "string",
                    "example": "0124/5478"
                  },
                  "private_mobile_phone": {
                    "type": "string",
                    "example": "0124/5478"
                  },
                  "private_email": {
                    "type": "string",
                    "example": "jandedoe@gmail.com"
                  }
                }
              }
            }
          }
        },
        "getArticleResponse": {
          "type": "object",
          "properties": {
            "loop_articles": {
              "type": "array",
              "items": {
            "type": "object",
                "properties": {
            "description": {
              "type": "string",
              "example": "Beispielartikel",
              "description": "Article description in your default language"
            },
            "description2": {
              "type": "string",
              "example": "Example article",
              "description": "Article description in your secondary language"
            },
            "long_description": {
              "type": "string",
              "example": "Dies ist ein Beispielartikel",
              "description": "Longer article description in your default language"
            },
            "long_description2": {
              "type": "string",
              "example": "This is an example article",
              "description": "Longer article description in your secondary language"
            },
            "number": {
              "type": "string",
              "example": "auto"
            },
            "purchase_price": {
              "type": "string",
              "example": "400"
            },
            "sales_price": {
              "type": "string",
              "example": "500"
            },
            "tax": {
              "type": "string",
              "example": "19"
            }
          }
              }
            }
          }
        },
        "getOpportunitiesResponse": {
          "type": "object",
          "properties": {
            "loop_entries": {
              "type": "array",
              "items": {
            "type": "object",
                "properties": {
                  "rowid": {
                    "type": "string",
                    "example": "821528"
                  },
                  "name": {
                    "type": "string",
                    "example": "Example Corp",
                    "description": "Name of associated organization"
                  },
                  "article": {
                    "type": "string",
                    "example": "Example Article"
                  },
                  "description": {
                    "type": "string",
                    "example": "This is an example article",
                    "description": "Description of associated article"
                  },
                  "articles_amount": {
                    "type": "number",
                    "example": 5
                  },
                  "tax": {
                    "type": "number",
                    "example": 19,
                    "description": "Tax rate in percent"
                  },
                  "sales_price": {
                    "type": "number",
                    "example": 100,
                    "description": "Sales price per article"
                  },
                  "actual_sales_price": {
                    "type": "number",
                    "example": 90,
                    "description": "Sales price per article with discount included"
                  },
                  "actual_sales_price_total_net": {
                    "type": "number",
                    "example": 450,
                    "description": "Summed up total sales price before tax"
                  },
                  "actual_sales_price_total_raw": {
                    "type": "number",
                    "example": 535.5,
                    "description": "Summed up total sales price including tax"
                  },
                  "purchase_price": {
                    "type": "number",
                    "example": 50,
                    "description": "Purchase price per article"
                  },
                  "actual_purchase_price": {
                    "type": "number",
                    "example": 40,
                    "description": "Purchase price per article with discount included"
                  },
                  "actual_purchase_price_total_net": {
                    "type": "number",
                    "example": 200,
                    "description": "Summed up total purchase price before tax"
                  },
                  "actual_purchase_price_total_raw": {
                    "type": "number",
                    "example": 238,
                    "description": "Summed up total purchase price including tax"
                  },
                  "planned_for_date": {
                    "type": "string",
                    "example": "2023-01-15"
                  },
                  "actual_sales_date": {
                    "type": "string",
                    "example": "2023-01-15",
                    "description": "Defaults to empty string if sale has not yet taken place"
                  },
                }
              }
            }
          }
        },
        "createPersonRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["insert_contact"]
            },
            "data": {
              "type": "string",
              "example": "{\"firstname\": \"Jane\", \"name\": \"Doe\", \"email\": \"jdoe@doecorp.com\"}"
            }
          }
        },
        "updatePersonRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["update_contact"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\", \"firstname\": \"Jane\", \"name\": \"Doe\", \"email\": \"jdoe@doecorp.com\"}"
            }
          }
        },
        "deletePersonRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["delete_contact"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\"}"
            }
          }
        },
        "createOrganizationRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["insert_organization"]
            },
            "data": {
              "type": "string",
              "example": "{\"name\": \"Organization Inc.\", \"email\": \"info@org.com\"}"
            }
          }
        },
        "updateOrganizationRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["update_organization"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\", \"name\": \"Changed Organization Inc.\", \"email\": \"info@neworg.com\"}"
            }
          }
        },
        "deleteOrganizationRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["delete_organization"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\"}"
            }
          }
        },
        "createArticleRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["insert_article"]
            },
            "data": {
              "type": "string",
              "example": "{\"description\": \"Example Article\", \"long_description\": \"This is an example article\", \"number\": \"auto\", \"purchase_price\": \"250\", \"sales_price\": \"500\", \"tax\": \"19\"}"
            }
          }
        },
        "updateArticleRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["update_article"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\", \"description\": \"Example Article\", \"long_description\": \"This is an updated article\", \"number\": \"auto\", \"purchase_price\": \"4000\", \"sales_price\": \"800\", \"tax\": \"19\"}"
            }
          }
        },
        "deleteArticleRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["delete_article"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\"}"
            }
          }
        },
        "createEventRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["insert_event"]
            },
            "data": {
              "type": "string",
              "example": "{\"title\": \"Important meeting!\", \"description\": \"Presentation of our new project to shareholders\", \"employees\": \"useremail@somewhere.com\",\"date\": \"2023-06-30\", \"time_start\": \"09:00:00\",  \"time_end\": \"09:30:00\", \"dt_start\": \"2023-06-30 09:00:00\", \"dt_end\": \"2023-06-30 09:30:00\"}"
            }
          }
        },
        "updateEventRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["update_event"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\"}"
            }
          }
        },
        "deleteEventRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["delete_event"]
            },
            "data": {
              "type": "string",
              "example": "{\"rowid\": \"12345\"}"
            }
          }
        },
        "createTicketRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["insert_ticket"]
            },
            "data": {
              "type": "string",
              "example": "{\"for_rowid\": \"12345\", \"subject\": \"Test Ticket\", \"ticket_type\": 1}"
            }
          }
        },
        "createNoteRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["insert_note"]
            },
            "data": {
              "type": "string",
              "example": "{\"ticket\": \"12345\", \"text\": \"This is a new note\"}"
            }
          }
        },
        "startWorkflowRequestForm": {
          "type": "object",
          "required": [
            "data",
            "method",
            "cookie"
          ],
          "properties": {
            "cookie": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "enum": ["start_workflow"]
            },
            "data": {
              "type": "string",
              "example": "{\"ticketid\": \"12345\", \"workflow_step\": \"1\", \"branching_step\": \"2\"}"
            }
          }
        },
        "createPersonResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "updatePersonResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "deletePersonResponse": {
          "type": "string",
          "example": "Deletion successful!"
        },
        "deleteOrganizationResponse": {
          "type": "string",
          "example": "Deletion successful!"
        },
        "deleteArticleResponse": {
          "type": "string",
          "example": "Deletion successful!"
        },
        "getEventsResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rowid": {"type": "string", "example": "54321"},
              "for_rowid": {"type": "string", "example": "12345"},
              "title": {"type": "string", "example": "Project presentation"},
              "description": {"type": "string", "example": "Presentation of our new project to shareholders"},
              "date": {"type": "string", "example": "2023-06-30"},
              "time_start": {"type": "string", "example": "09:00:00"},
              "time_end": {"type": "string", "example": "09:30:00"},
              "dt_start": {"type": "string", "example": "2023-06-30 09:00:00"},
              "dt_end": {"type": "string", "example": "2023-06-30 09:30:00"},
              "company_name": {"type": "string", "example": "Example Inc."},
              "contact_name": {"type": "string", "example": "Jane Doe"},
              "all_day": {"type": "string", "example": "0"},
              "private": {"type": "string", "example": "0"},
              "last_update": {"type": "string", "example": "2023-05-30 09:00:59"},
              "category_display": {"type": "string", "example": "video call"}
            }
          }
        },
        "createEventResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "updateEventResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "deleteEventResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "createTicketResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "createNoteResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "getOrganizationResponse": {
          "type": "object",
          "properties": {
            "loop_addresses": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "rowid": {
                    "type": "string",
                    "example": "821528"
                  },
                  "mandant": {
                    "type": "string",
                    "example": "821528"
                  },
                  "for_rowid": {
                    "type": "string",
                    "example": "821528"
                  },
                  "name": {
                    "type": "string",
                    "example": "Company Ltd."
                  },
                  "email": {
                    "type": "string",
                    "example": "info@company.com"
                  },
                  "street": {
                    "type": "string",
                    "example": "Main Str."
                  },
                  "street_number": {
                    "type": "string",
                    "example": "441"            },
                  "zip_code": {
                    "type": "string",
                    "example": "821528"
                  },
                  "p_o_box": {
                    "type": "string",
                    "example": "B41C"
                  },
                  "town": {
                    "type": "string",
                    "example": "New York City"
                  },
                  "state": {
                    "type": "string",
                    "example": "New York"
                  },
                  "country": {
                    "type": "string",
                    "example": "USA"
                  },
                  "phone": {
                    "type": "string",
                    "example": "82152587588"
                  },
                  "fax": {
                    "type": "string",
                    "example": "82759871528"
                  }
                }
              }
            }
          }
        },
        "createOrganizationResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "createArticleResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "updateOrganizationResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "updateArticleResponse": {
          "type": "object",
          "properties": {
            "rowid": {
              "type": "number",
              "example": 16239
            }
          }
        },
        "startWorkflowResponse": {
          "type": "string",
          "example": "Workflow started!"
        },
        "getTicketTypesResponse": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "example": "Sales: Lead"
                  },
                  "value": {
                    "type": "string",
                    "example": "some id 123"
                  },
            }
          }
        },
        "getCategoriesResponse": {
          "type": "object",
          "properties": {
                  "address_category1": {
                    "type": "object",
                    "properties": {
                      "options": {
                        "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string",
                                "example": "Sales"
                              },
                              "value": {
                                "type": "string",
                                "example": "some id 123"
                              },
                            }
                          }
                        }
                      }

                  },
                  "ticket_category1": {
                    "type": "object",
                    "properties": {
                      "options": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "text": {
                              "type": "string",
                              "example": "Hot leads"
                            },
                            "value": {
                              "type": "string",
                              "example": "some id 123"
                            },
                          }
                        }
                      }
                    }
                  }
                }
        },
        "getWorkflowsResponse": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rowid": {
                "type": "string",
                "example": "1"
              },
              "title": {
                "type": "string",
                "example": "Workflow XY"
              }
              "last_update": {
                "type": "string",
                "example": "2023-04-06 11:15:08"
              },
              "username": {
                "type": "string",
                "example": "Frank Meier"
              }
            }

                }
        }
      }
    }
  }
